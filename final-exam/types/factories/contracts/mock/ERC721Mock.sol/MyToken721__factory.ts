/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MyToken721,
  MyToken721Interface,
} from "../../../../contracts/mock/ERC721Mock.sol/MyToken721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200144d3803806200144d83398101604081905262000034916200012e565b806040518060400160405280600a8152602001694d79546f6b656e37323160b01b815250604051806040016040528060068152602001654d544b37323160d01b815250816000908162000088919062000207565b50600162000097828262000207565b5050506001600160a01b038116620000c957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d481620000dc565b5050620002d3565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014157600080fd5b81516001600160a01b03811681146200015957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018b57607f821691505b602082108103620001ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000202576000816000526020600020601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000160565b6200023b8162000234845462000176565b84620001b2565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61116a80620002e36000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610251578063e985e9c514610264578063f2fde38b146102a057600080fd5b8063a22cb4651461022b578063b88d4fde1461023e57600080fd5b806370a08231146101e9578063715018a61461020a5780638da5cb5b1461021257806395d89b411461022357600080fd5b806323b872dd116100ee57806323b872dd1461019d57806340d097c3146101b057806342842e0e146101c35780636352211e146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e366004610ddd565b6102b3565b60405190151581526020015b60405180910390f35b610150610305565b60405161013f9190610e4a565b61017061016b366004610e5d565b610397565b6040516001600160a01b03909116815260200161013f565b61019b610196366004610e92565b6103c0565b005b61019b6101ab366004610ebc565b6103cf565b61019b6101be366004610ef8565b61045f565b61019b6101d1366004610ebc565b610488565b6101706101e4366004610e5d565b6104a8565b6101fc6101f7366004610ef8565b6104b3565b60405190815260200161013f565b61019b6104fb565b6006546001600160a01b0316610170565b61015061050f565b61019b610239366004610f13565b61051e565b61019b61024c366004610f65565b610529565b61015061025f366004610e5d565b610540565b610133610272366004611041565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61019b6102ae366004610ef8565b6105b5565b60006001600160e01b031982166380ac58cd60e01b14806102e457506001600160e01b03198216635b5e139f60e01b145b806102ff57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461031490611074565b80601f016020809104026020016040519081016040528092919081815260200182805461034090611074565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050905090565b60006103a2826105f3565b506000828152600460205260409020546001600160a01b03166102ff565b6103cb82823361062c565b5050565b6001600160a01b0382166103fe57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061040b838333610639565b9050836001600160a01b0316816001600160a01b031614610459576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103f5565b50505050565b61046761073f565b6007805460009182610478836110ae565b9190505590506103cb828261076c565b6104a383838360405180602001604052806000815250610529565b505050565b60006102ff826105f3565b60006001600160a01b0382166104df576040516322718ad960e21b8152600060048201526024016103f5565b506001600160a01b031660009081526003602052604090205490565b61050361073f565b61050d6000610786565b565b60606001805461031490611074565b6103cb3383836107e5565b6105348484846103cf565b61045984848484610884565b606061054b826105f3565b50600061056360408051602081019091526000815290565b9050600081511161058357604051806020016040528060008152506105ae565b8061058d846109ad565b60405160200161059e9291906110d5565b6040516020818303038152906040525b9392505050565b6105bd61073f565b6001600160a01b0381166105e757604051631e4fbdf760e01b8152600060048201526024016103f5565b6105f081610786565b50565b6000818152600260205260408120546001600160a01b0316806102ff57604051637e27328960e01b8152600481018490526024016103f5565b6104a38383836001610a4d565b6000828152600260205260408120546001600160a01b039081169083161561066657610666818486610b7f565b6001600160a01b038116156106a457610683600085600080610a4d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106d3576001600160a01b0385166000908152600360205260409020805460010190555b600084815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b0316331461050d5760405163118cdaa760e01b81523360048201526024016103f5565b6103cb828260405180602001604052806000815250610be3565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661081757604051630b61174360e31b81526001600160a01b03831660048201526024016103f5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561045957604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108c6903390889087908790600401611104565b6020604051808303816000875af1925050508015610901575060408051601f3d908101601f191682019092526108fe91810190611140565b60015b61096a573d80801561092f576040519150601f19603f3d011682016040523d82523d6000602084013e610934565b606091505b50805160000361096257604051633250574960e11b81526001600160a01b03851660048201526024016103f5565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146109a657604051633250574960e11b81526001600160a01b03851660048201526024016103f5565b5050505050565b606060006109ba83610bfa565b600101905060008167ffffffffffffffff8111156109da576109da610f4f565b6040519080825280601f01601f191660200182016040528015610a04576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610a0e57509392505050565b8080610a6157506001600160a01b03821615155b15610b42576000610a71846105f3565b90506001600160a01b03831615801590610a9d5750826001600160a01b0316816001600160a01b031614155b8015610acf57506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b15610af85760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103f5565b8115610b405783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50506000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610b8a838383610cdc565b6104a3576001600160a01b038316610bb857604051637e27328960e01b8152600481018290526024016103f5565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103f5565b610bed8383610d62565b6104a36000848484610884565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610c43577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610c6f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c8d57662386f26fc10000830492506010015b6305f5e1008310610ca5576305f5e100830492506008015b6127108310610cb957612710830492506004015b60648310610ccb576064830492506002015b600a83106102ff5760010192915050565b60006001600160a01b03831615801590610d5a5750826001600160a01b0316846001600160a01b03161480610d3657506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b80610d5a57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610d8c57604051633250574960e11b8152600060048201526024016103f5565b6000610d9a83836000610639565b90506001600160a01b038116156104a3576040516339e3563760e11b8152600060048201526024016103f5565b6001600160e01b0319811681146105f057600080fd5b600060208284031215610def57600080fd5b81356105ae81610dc7565b60005b83811015610e15578181015183820152602001610dfd565b50506000910152565b60008151808452610e36816020860160208601610dfa565b601f01601f19169290920160200192915050565b6020815260006105ae6020830184610e1e565b600060208284031215610e6f57600080fd5b5035919050565b80356001600160a01b0381168114610e8d57600080fd5b919050565b60008060408385031215610ea557600080fd5b610eae83610e76565b946020939093013593505050565b600080600060608486031215610ed157600080fd5b610eda84610e76565b9250610ee860208501610e76565b9150604084013590509250925092565b600060208284031215610f0a57600080fd5b6105ae82610e76565b60008060408385031215610f2657600080fd5b610f2f83610e76565b915060208301358015158114610f4457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f7b57600080fd5b610f8485610e76565b9350610f9260208601610e76565b925060408501359150606085013567ffffffffffffffff80821115610fb657600080fd5b818701915087601f830112610fca57600080fd5b813581811115610fdc57610fdc610f4f565b604051601f8201601f19908116603f0116810190838211818310171561100457611004610f4f565b816040528281528a602084870101111561101d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561105457600080fd5b61105d83610e76565b915061106b60208401610e76565b90509250929050565b600181811c9082168061108857607f821691505b6020821081036110a857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016110ce57634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516110e7818460208801610dfa565b8351908301906110fb818360208801610dfa565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526111366080830184610e1e565b9695505050505050565b60006020828403121561115257600080fd5b81516105ae81610dc756fea164736f6c6343000818000a";

type MyToken721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyToken721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken721__factory extends ContractFactory {
  constructor(...args: MyToken721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MyToken721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken721__factory {
    return super.connect(runner) as MyToken721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyToken721Interface {
    return new Interface(_abi) as MyToken721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken721 {
    return new Contract(address, _abi, runner) as unknown as MyToken721;
  }
}
