/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MyToken1155,
  MyToken1155Interface,
} from "../../../../contracts/mock/ERC1155Mock.sol/MyToken1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015ac380380620015ac8339810160408190526200003491620000f7565b6040805160208101909152600081528190620000508162000093565b506001600160a01b0381166200008057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200008b81620000a5565b50506200029c565b6002620000a18282620001d0565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200010a57600080fd5b81516001600160a01b03811681146200012257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200015457607f821691505b6020821081036200017557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cb576000816000526020600020601f850160051c81016020861015620001a65750805b601f850160051c820191505b81811015620001c757828155600101620001b2565b5050505b505050565b81516001600160401b03811115620001ec57620001ec62000129565b6200020481620001fd84546200013f565b846200017b565b602080601f8311600181146200023c5760008415620002235750858301515b600019600386901b1c1916600185901b178555620001c7565b600085815260208120601f198616915b828110156200026d578886015182559484019460019091019084016200024c565b50858210156200028c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61130080620002ac6000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c8063715018a611610081578063e985e9c51161005b578063e985e9c5146101bf578063f242432a146101fb578063f2fde38b1461020e57600080fd5b8063715018a6146101895780638da5cb5b14610191578063a22cb465146101ac57600080fd5b8063156e29f6116100b2578063156e29f6146101415780632eb2c2d6146101565780634e1273f41461016957600080fd5b8062fdd58e146100d857806301ffc9a7146100fe5780630e89341c14610121575b600080fd5b6100eb6100e6366004610c9b565b610221565b6040519081526020015b60405180910390f35b61011161010c366004610cdb565b610249565b60405190151581526020016100f5565b61013461012f366004610cff565b610299565b6040516100f59190610d5e565b61015461014f366004610d71565b61032d565b005b610154610164366004610eee565b610355565b61017c610177366004610f98565b6103e0565b6040516100f59190611094565b6101546104ad565b6003546040516001600160a01b0390911681526020016100f5565b6101546101ba3660046110a7565b6104c1565b6101116101cd3660046110e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610154610209366004611116565b6104d0565b61015461021c36600461117b565b61054e565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061027a57506001600160e01b031982166303a24d0760e21b145b8061024357506301ffc9a760e01b6001600160e01b0319831614610243565b6060600280546102a890611196565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490611196565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b50505050509050919050565b61033561058c565b610350838383604051806020016040528060008152506105b9565b505050565b336001600160a01b038616811480159061039557506001600160a01b0380871660009081526001602090815260408083209385168352929052205460ff16155b156103cb5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6103d88686868686610616565b505050505050565b606081518351146104115781518351604051635b05999160e01b8152600481019290925260248201526044016103c2565b6000835167ffffffffffffffff81111561042d5761042d610da4565b604051908082528060200260200182016040528015610456578160200160208202803683370190505b50905060005b84518110156104a55760208082028601015161048090602080840287010151610221565b828281518110610492576104926111d0565b602090810291909101015260010161045c565b509392505050565b6104b561058c565b6104bf600061067d565b565b6104cc3383836106e7565b5050565b336001600160a01b038616811480159061051057506001600160a01b0380871660009081526001602090815260408083209385168352929052205460ff16155b156105415760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044016103c2565b6103d8868686868661077d565b61055661058c565b6001600160a01b03811661058057604051631e4fbdf760e01b8152600060048201526024016103c2565b6105898161067d565b50565b6003546001600160a01b031633146104bf5760405163118cdaa760e01b81523360048201526024016103c2565b6001600160a01b0384166105e357604051632bfa23e760e11b8152600060048201526024016103c2565b604080516001808252602082018690528183019081526060820185905260808201909252906103d860008784848761080b565b6001600160a01b03841661064057604051632bfa23e760e11b8152600060048201526024016103c2565b6001600160a01b03851661066957604051626a0d4560e21b8152600060048201526024016103c2565b610676858585858561080b565b5050505050565b600380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166107105760405162ced3e160e81b8152600060048201526024016103c2565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107a757604051632bfa23e760e11b8152600060048201526024016103c2565b6001600160a01b0385166107d057604051626a0d4560e21b8152600060048201526024016103c2565b60408051600180825260208201869052818301908152606082018590526080820190925290610802878784848761080b565b50505050505050565b6108178585858561085e565b6001600160a01b0384161561067657825133906001036108505760208481015190840151610849838989858589610a72565b50506103d8565b6103d8818787878787610b96565b805182511461088d5781518151604051635b05999160e01b8152600481019290925260248201526044016103c2565b3360005b8351811015610993576020818102858101820151908501909101516001600160a01b03881615610944576000828152602081815260408083206001600160a01b038c1684529091529020548181101561091d576040516303dee4c560e01b81526001600160a01b038a1660048201526024810182905260448101839052606481018490526084016103c2565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610989576000828152602081815260408083206001600160a01b038b168452909152812080548392906109839084906111e6565b90915550505b5050600101610891565b508251600103610a145760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a05929190918252602082015260400190565b60405180910390a45050610676565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a63929190611207565b60405180910390a45050505050565b6001600160a01b0384163b156103d85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ab69089908990889088908890600401611235565b6020604051808303816000875af1925050508015610af1575060408051601f3d908101601f19168201909252610aee91810190611278565b60015b610b5a573d808015610b1f576040519150601f19603f3d011682016040523d82523d6000602084013e610b24565b606091505b508051600003610b5257604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c2565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461080257604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c2565b6001600160a01b0384163b156103d85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bda9089908990889088908890600401611295565b6020604051808303816000875af1925050508015610c15575060408051601f3d908101601f19168201909252610c1291810190611278565b60015b610c43573d808015610b1f576040519150601f19603f3d011682016040523d82523d6000602084013e610b24565b6001600160e01b0319811663bc197c8160e01b1461080257604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c2565b80356001600160a01b0381168114610c9657600080fd5b919050565b60008060408385031215610cae57600080fd5b610cb783610c7f565b946020939093013593505050565b6001600160e01b03198116811461058957600080fd5b600060208284031215610ced57600080fd5b8135610cf881610cc5565b9392505050565b600060208284031215610d1157600080fd5b5035919050565b6000815180845260005b81811015610d3e57602081850181015186830182015201610d22565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610cf86020830184610d18565b600080600060608486031215610d8657600080fd5b610d8f84610c7f565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610de357610de3610da4565b604052919050565b600067ffffffffffffffff821115610e0557610e05610da4565b5060051b60200190565b600082601f830112610e2057600080fd5b81356020610e35610e3083610deb565b610dba565b8083825260208201915060208460051b870101935086841115610e5757600080fd5b602086015b84811015610e735780358352918301918301610e5c565b509695505050505050565b600082601f830112610e8f57600080fd5b813567ffffffffffffffff811115610ea957610ea9610da4565b610ebc601f8201601f1916602001610dba565b818152846020838601011115610ed157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f0657600080fd5b610f0f86610c7f565b9450610f1d60208701610c7f565b9350604086013567ffffffffffffffff80821115610f3a57600080fd5b610f4689838a01610e0f565b94506060880135915080821115610f5c57600080fd5b610f6889838a01610e0f565b93506080880135915080821115610f7e57600080fd5b50610f8b88828901610e7e565b9150509295509295909350565b60008060408385031215610fab57600080fd5b823567ffffffffffffffff80821115610fc357600080fd5b818501915085601f830112610fd757600080fd5b81356020610fe7610e3083610deb565b82815260059290921b8401810191818101908984111561100657600080fd5b948201945b8386101561102b5761101c86610c7f565b8252948201949082019061100b565b9650508601359250508082111561104157600080fd5b5061104e85828601610e0f565b9150509250929050565b60008151808452602080850194506020840160005b838110156110895781518752958201959082019060010161106d565b509495945050505050565b602081526000610cf86020830184611058565b600080604083850312156110ba57600080fd5b6110c383610c7f565b9150602083013580151581146110d857600080fd5b809150509250929050565b600080604083850312156110f657600080fd5b6110ff83610c7f565b915061110d60208401610c7f565b90509250929050565b600080600080600060a0868803121561112e57600080fd5b61113786610c7f565b945061114560208701610c7f565b93506040860135925060608601359150608086013567ffffffffffffffff81111561116f57600080fd5b610f8b88828901610e7e565b60006020828403121561118d57600080fd5b610cf882610c7f565b600181811c908216806111aa57607f821691505b6020821081036111ca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b8082018082111561024357634e487b7160e01b600052601160045260246000fd5b60408152600061121a6040830185611058565b828103602084015261122c8185611058565b95945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261126d60a0830184610d18565b979650505050505050565b60006020828403121561128a57600080fd5b8151610cf881610cc5565b60006001600160a01b03808816835280871660208401525060a060408301526112c160a0830186611058565b82810360608401526112d38186611058565b905082810360808401526112e78185610d18565b9897505050505050505056fea164736f6c6343000818000a";

type MyToken1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyToken1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken1155__factory extends ContractFactory {
  constructor(...args: MyToken1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MyToken1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken1155__factory {
    return super.connect(runner) as MyToken1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyToken1155Interface {
    return new Interface(_abi) as MyToken1155Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken1155 {
    return new Contract(address, _abi, runner) as unknown as MyToken1155;
  }
}
